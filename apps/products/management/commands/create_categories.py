"""
Management –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∑–æ–≤–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π —Ç–æ–≤–∞—Ä—ñ–≤
"""
from django.core.management.base import BaseCommand
from apps.products.models import Category


class Command(BaseCommand):
    help = '–°—Ç–≤–æ—Ä—é—î –±–∞–∑–æ–≤—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–æ–≤–∞—Ä—ñ–≤ –¥–ª—è —ñ–Ω—Ç–∏–º-–º–∞–≥–∞–∑–∏–Ω—É'

    def handle(self, *args, **options):
        self.stdout.write('–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∑–æ–≤–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π —Ç–æ–≤–∞—Ä—ñ–≤...')
        
        # –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è (—ñ–Ω—Ç–∏–º-–º–∞–≥–∞–∑–∏–Ω)
        categories_data = [
            ('–ê–∫—Ü—ñ–π–Ω—ñ —Ç–æ–≤–∞—Ä–∏', 'sale', 1),
            ('–î–ª—è —á–æ–ª–æ–≤—ñ–∫—ñ–≤', 'for-men', 2),
            ('–î–ª—è –∂—ñ–Ω–æ–∫', 'for-women', 3),
            ('–î–ª—è –ø–∞—Ä', 'for-couples', 4),
            ('–ë—ñ–ª–∏–∑–Ω–∞', 'lingerie', 5),
            ('–ê–∫—Å–µ—Å—É–∞—Ä–∏', 'accessories', 6),
            ('–Ü–Ω—Ç–∏–º–Ω–∞ –∫–æ—Å–º–µ—Ç–∏–∫–∞', 'intimate-cosmetics', 7),
            ('–ü–æ–¥–∞—Ä—É–Ω–∫–æ–≤—ñ –Ω–∞–±–æ—Ä–∏', 'gift-sets', 8),
            ('–ù–æ–≤–∏–Ω–∫–∏', 'new-arrivals', 9),
            ('–•—ñ—Ç–∏ –ø—Ä–æ–¥–∞–∂—ñ–≤', 'bestsellers', 10),
        ]
        
        created_count = 0
        updated_count = 0
        
        for name, slug, sort_order in categories_data:
            category, created = Category.objects.get_or_create(
                slug=slug,
                defaults={
                    'name': name,
                    'sort_order': sort_order,
                    'is_active': True,
                    'parent': None
                }
            )
            
            if created:
                created_count += 1
                self.stdout.write(
                    self.style.SUCCESS(f'‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é: {name}')
                )
            else:
                # –û–Ω–æ–≤–ª—é—î–º–æ —ñ—Å–Ω—É—é—á—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é
                category.name = name
                category.sort_order = sort_order
                category.is_active = True
                category.save()
                updated_count += 1
                self.stdout.write(
                    self.style.WARNING(f'üîÑ –û–Ω–æ–≤–ª–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é: {name}')
                )
        
        self.stdout.write('\n' + '='*50)
        self.stdout.write(
            self.style.SUCCESS(
                f'üéâ –ì–æ—Ç–æ–≤–æ! –°—Ç–≤–æ—Ä–µ–Ω–æ: {created_count}, –û–Ω–æ–≤–ª–µ–Ω–æ: {updated_count}'
            )
        )
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        total_categories = Category.objects.filter(is_active=True).count()
        self.stdout.write(
            self.style.SUCCESS(f'üìä –í—Å—å–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π: {total_categories}')
        )
